name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Build
        run: cargo build --workspace --all-targets --verbose

      - name: Run tests
        run: cargo test --workspace --all-targets --verbose

      # Workaround for https://github.com/rust-lang/cargo/issues/6669
      - name: Run doctests
        run: cargo test --workspace --doc --verbose

  # Ensure clippy doesn't complain.
  clippy:
    name: Clippy

    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy

      - name: Lint with clippy
        run: cargo clippy --all-targets --workspace --verbose -- -D warnings

  # build a flamegraph
  flamegraph:
    name: Flamegraph
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Build
        run: cargo build --workspace --all-targets --verbose

      - name: Setup Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.32'

      - name: Clone (perl) flamegraph
        run: git clone https://github.com/brendangregg/FlameGraph

      - name: Run flamegraph
        run: |
          echo 1 | sudo tee /proc/sys/kernel/perf_event_paranoid
          echo 0 | sudo tee /proc/sys/kernel/kptr_restrict
          cd examples/squire
          perf record -- ../../target/debug/quest -f main.qs
          #../../FlameGraph/stackcollapse-perf.pl out.perf > $file.folded
          ls *.out

#      - name: Install flamegraph
#        run: cargo install flamegraph
        
      # set the paranoid flag
#      - name: Run flamegraph
#        run: |
#          flamegraph_bin=$(which flamegraph)
#          echo $flamegraph
#          echo 1 | sudo tee /proc/sys/kernel/perf_event_paranoid
#          for file in $(find -type f -iname "*.qs")
#          do
#            echo $file 
#            sudo $flamegraph_bin -o $file.svg -- ./target/debug/quest -f $file || true
#          done
#          find -type f -iname "*.svg"
